#include <ArduinoJson.h>

// Sample implementation of the MAX30100 PulseOximeter
// Using the following module
// http://www.ebay.com/itm/-/391709438817?ssPageName=STRK:MESE:IT
// can not gaurantee if the app will work with other implementations of the module. 

#include "MAX30100_PulseOximeter.h"
#include <U8g2lib.h>
#include <Wire.h>
#include <SoftwareSerial.h>
SoftwareSerial s(D6,D5);

int data;

#define REPORTING_PERIOD_MS     500
U8G2_SSD1306_128X32_UNIVISION_F_HW_I2C u8g2(U8G2_R0);

#include <ESP8266WiFi.h>                                                // esp8266 library
#include <FirebaseArduino.h>                                             // firebase library

#define FIREBASE_HOST "iot-tele-medicine-system.firebaseio.com"                         // the project name address from firebase id
#define FIREBASE_AUTH "B02nmB7IJy5ejJyCoL7nk9YVLuodwJtuSa4dnTIF"                    // the secret key generated from firebase
#define WIFI_SSID "RZKTechnology"                                          // input your home or public wifi name 
#define WIFI_PASSWORD "99959959"                                    //password of wifi ssid



/*********
  Rui Santos
  Complete project details at https://randomnerdtutorials.com  
  Based on the Dallas Temperature Library example
*********/

#include <OneWire.h>
#include <DallasTemperature.h>

// Data wire is conntec to the Arduino digital pin 2
#define ONE_WIRE_BUS 2

// Setup a oneWire instance to communicate with any OneWire devices
OneWire oneWire(ONE_WIRE_BUS);

// Pass our oneWire reference to Dallas Temperature sensor 
DallasTemperature sensors(&oneWire);


// PulseOximeter is the higher level interface to the sensor
// it offers:
//  * beat detection reporting
//  * heart rate calculation
//  * SpO2 (oxidation level) calculation
PulseOximeter pox;

const int numReadings=10;
float filterweight=0.5;
uint32_t tsLastReport = 0;
uint32_t last_beat=0;
int readIndex=0;
int average_beat=0;
int average_SpO2=0;
bool calculation_complete=false;
bool calculating=false;
bool initialized=false;
byte beat=0;





// fonts 
//u8g2_font_u8glib_4_hr
//----------------------------




  

void setup()
{
   // Start up the library
  sensors.begin();
    Serial.begin(9600);
   s.begin(9600);
    sensors.begin();
    u8g2.begin();
     u8g2.enableUTF8Print();
    //pox.begin();
   // pox.setOnBeatDetectedCallback(onBeatDetected);
//    initial_display();

   WiFi.begin(WIFI_SSID, WIFI_PASSWORD);                                      //try to connect with wifi
  Serial.print("Connecting to ");
  Serial.print(WIFI_SSID);
  while (WiFi.status() != WL_CONNECTED) {
    Serial.print(".");
    
    delay(500);
  }
   Firebase.begin(FIREBASE_HOST, FIREBASE_AUTH);
  

}



void display_values()
{


}



void loop(){

  
 //s.write("s");
  if (s.available()>0)
  {

    
    data=s.read();
    Serial.println(data);
  
    
  }
  
  
  // Call sensors.requestTemperatures() to issue a global temperature and Requests to all devices on the bus
  sensors.requestTemperatures(); 
  
  Serial.print("Celsius temperature: ");
  // Why "byIndex"? You can have more than one IC on the same bus. 0 refers to the first IC on the wire
  Serial.print(sensors.getTempCByIndex(0)); 
  Serial.print(" - Fahrenheit temperature: ");
  Serial.println(sensors.getTempFByIndex(0));
  delay(1000);
  
  
  u8g2.clearBuffer();
 u8g2.setFont(u8g2_font_smart_patrol_nbp_tf);  
  u8g2.setFontDirection(0);

   u8g2.setCursor(0,10); //(page num ,column)
    u8g2.print("Heart");
  u8g2.setCursor(69,12);  
  u8g2.print(data);
  u8g2.print(" Bpm");
  u8g2.setCursor(0,30);
  u8g2.print("Temp ");
  u8g2.setCursor(69,30);  
  float tem =sensors.getTempCByIndex(0)+2.0;
  u8g2.print(tem);
  u8g2.print(" °C"); 
  u8g2.sendBuffer();

 
  
  Firebase.setFloat("P001/Temperature ",tem);   
  Firebase.setInt("P001/Heart_Rate ",data);   

  }